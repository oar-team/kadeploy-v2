<?xml version="1.0" encoding="ISO-8859-1" ?>
<chapter id="classeenvironment">
  <title>Classe d'environment</title>
  <para>
     Les classes d'environments sont prévu pour : 
    <itemizedlist>

      <listitem>isoler la mise en place d'un environment vis à vis du code de kadeploy
      </listitem>

      <listitem>modularisé le code
      </listitem>
    </itemizedlist>
    <para>
      Exemple : le déploiement d'un système d'exploitation par kadeploy 
      se passe généralement comme ça : 
      <itemizedlist>
	<listitem>Configuration d'un boot réseau ( pxe )
	</listitem>
	<listitem>Redémarage du noeud ( reboot )
	</listitem>
	<listitem>Attente du noeud
	</listitem>
	<listitem>Envoie de la preinstall
	</listitem>
	<listitem>Envoie de l'environment
	</listitem>
	<listitem>Envoie de la postinstall
	</listitem>
	<listitem>Configuration d'un boot réseau pxe
	</listitem>
	<listitem>Redémarage du noeud ( reboot )
	</listitem>
	<listitem>Attente du noeud
	</listitem>
      </itemizedlist>
      Deux environments ont été déployé durant ces étapes, un environment
      de déploiement ( PXE ) et un environment déployé.
    </para>

    <para>
      kadeploy distingue quatre type de déploiement :
      <itemizedlist>
	<listitem> environment PXE
	</listitem>
	<listitem> environment DD
	</listitem>
	<listitem> environment LINUX
	</listitem>
	<listitem> environment WINDOWS
	</listitem>

      </itemizedlist>           
    </para>
  </para>

  <sect1>
    <title> type de déploiement
    </title>
      <para>
      Il existe un grand nombre d'application de déploiement d'os.
      Chacune de ces applications à sa propre méchanique de déploiement.
      Kadeploy n'à pas pour but de déployer un système d'exploitation en particulier. 
    </para>

    
    <para>
      Les classes d'environments permettent de séparer le code de
      kadeploy du code de déploiement d'un système d'exploitation en
      particulier.
      Il sagit de script se trouvant dans
      "lib/environment/".
      Chacun de ces scripts à la même API, on peut les voir comme des plugins.
      Pour crée une nouvelle classe d'environment il suffit de :
      <itemizedlist>
	<listitem>crée un scripts d'étapes.      
	</listitem>
	<listitem>modifier le main de kadeployenv pour lui préciser son existences
	</listitem>
	<listitem>d'associer un environment de la base de donnée à cette classe.
	  Exemple : debian4all => linux
	</listitem>
      </itemizedlist>
    </para>

    <sect2>
      <title> scripts de déploiement
      </title>
      <para>
	Les scripts prennent en paramétres :
	<itemizedlist>
	  <listitem>les noeuds impliqué
	  </listitem>
	  <listitem>un fichier de description de l'environment
	  </listitem>
	</itemizedlist>

	<para>
	  Le script de déploiement se charge des verifications du
	  fichier de description (cela pourrait être ajouté à l'API du
	  script de déploiement) et du déploiement à proprement parler.	 
	</para>

	Le code de retour du script doit être : 
	<itemizedlist>
	  <listitem>0 si l'étape à fonctionner correctement
	    </listitem>
	  <listitem>1 si l'étape a échoué pour au moins un noeud
	  </listitem>
	</itemizedlist>	
	Le déploiement d'un environment slackware sur la partition 2 du disque 1 de deux noeud peut s'ecrire ainsi :
	<programlisting>	 
	  (prefixkadeploy)/lib/environment/linux -m noeud-1.cluster.net -m noeud-2.cluster.net -envfile /home/yoyz/maslack.env -p 2 -d 1
	</programlisting>
      </para>
      <para>	
      </para>
    </sect2>   
  </sect1>
  
    
</chapter>