<?xml version="1.0" encoding="ISO-8859-1" ?>
<chapter id="classeenvironment">
  <title>Classe d'environment</title>
  <para>
     Les classes d'environments sont prévu pour : 
    <itemizedlist>
      <listitem>isoler la mise en place d'un environment vis à vis du code de kadeploy
      </listitem>

      <listitem>modularisé le code
      </listitem>
    </itemizedlist>
    <para>
      Exemple : le déploiement d'un système d'exploitation sur PC 
      se passe généralement comme ça : 
      <itemizedlist>
	<listitem>
	  configuration d'un boot réseau ( pxe )
	</listitem>
	<listitem>
	  redémarage ( reboot )
	  </listitem>
	<listitem>
	  envoie de la preinstall
	</listitem>
	<listitem>
	  envoie de l'environment
	</listitem>
	<listitem>
	  envoie de la postinstall
	</listitem>
	<listitem>
	  configuration d'un noyau de boot pxe
	</listitem>
	<listitem>
	  reboot
	</listitem>
	<listitem>
	  check du noeud
	</listitem>
      </itemizedlist>
      Deux environments ont été déployé durant ces étapes, un environment
      de déploiement ( PXE ) et un environment déployé.
    </para>

    <para>
      kadeploy distingue quatre type d'environments : 
      <itemizedlist>
	<listitem> environment PXE
	</listitem>
	<listitem> environment DD
	</listitem>
	<listitem> environment LINUX
	</listitem>
	<listitem> environment WINDOWS
	</listitem>

      </itemizedlist>           
    </para>
  </para>

  <sect1>
    <title> Etape et séquence de déploiement
    </title>
    <para>
      Il existe un grand nombre d'application de déploiement d'os.
      Chacune de ces applications à sa propre méchanique de déploiement.
      kadeploy tente d'offrir une méchanique de base simple et robuste
      sur lequel il est facile de greffer tout type de système de déploiement.
    </para>

    <para>
      Les classes d'environments  permettent de découper l'application en deux partie.
      <itemizedlist>
	<listitem>Le code des outils kadeploy
	</listitem>
	<listitem>Le code de déploiement d'un environment
	</listitem>
      </itemizedlist>
    </para>

    <para>
      L'API d'une classe d'environment est simple.
      Pour crée une classe d'environment il suffit de :
      <itemizedlist>
	<listitem>crée un répertoire du nom de la classe d'environment.
	</listitem>
	<listitem>crée un scripts d'étapes.      
	</listitem>
	<listitem>d'associer un environment de la base de donnée à cette classe.
	  Exemple : debian4all => linux
	</listitem>
      </itemizedlist>
    </para>

    <sect2>
      <title> scripts d'étapes
      </title>
      <para>
	Un scripts d'étapes, est un fichier executables qui prend les même

      </para>      
      <para>
	Ces scripts prennent en paramétres les noeuds qui sont impliqué 
	dans cette étape.
	Un nombre de reprise sur echec "-failnumber".
	Ainsi que deux fichier de noeuds :
	<itemizedlist>
	  <listitem>Un fichier contenant les noeuds défaillant : -failnodefile
	  </listitem>
	  <listitem>Un fichier contenant les noeuds qui ont réussie : -goodnode
	  </listitem>
	</itemizedlist>
	Le code de retour du script doit être : 
	<itemizedlist>
	  <listitem>0 si l'étape à fonctionner correctement
	    </listitem>
	  <listitem>1 si l'étape a échoué pour au moins un noeud
	  </listitem>
	</itemizedlist>	
	Exemple :
	<programlisting>	 
	  01-check -failnumber 5 -failnodefile /tmp/failnode -goodnode /tmp/goodnode -m noeud-1.cluster.net -m noeud-2.cluster.net
	</programlisting>
      </para>
      <para>	
      </para>
    </sect2>   
  </sect1>
  
    
</chapter>