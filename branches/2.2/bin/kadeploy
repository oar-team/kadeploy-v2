#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;
use libkadeploy2::message;
use libkadeploy2::environment;
use libkadeploy2::deploy_iolib;
use libkadeploy2::deployconf;
use libkadeploy2::nodelist;
use libkadeploy2::command;

my $message=libkadeploy2::message::new();
my $conf=libkadeploy2::deployconf::new();
if (! $conf->loadcheck()) { exit 1; }
my $kadeploydir=$conf->get("kadeploy2_directory");
my $deployenv=$conf->getpath_cmd("deployenv");

my @node_list;
my $disknumber=1;
my $partnumber=1;
my $login;
my $help;
my $verbose=0;
my $envname;
my $environment;
my $nodelist;
my $basefile;
my $partitionfile;
my $cmd;
my $ok=1;
my $noreboot=0;

GetOptions(
	   'm=s'                  => \@node_list,
	   'machine=s'            => \@node_list,
	   
	   'disknumber=s'         => \$disknumber,
	   'd=s'                  => \$disknumber,
	   'partnumber=s'         => \$partnumber,
	   'p=s'                  => \$partnumber,
	   
	   'login=s'              => \$login,
	   'l=s'                  => \$login,
	   
	   'environment=s'        => \$envname,
	   'e=s'                  => \$envname,
	   
	   'h!'                   => \$help,
	   'help!'                => \$help,
	   'v!'                   => \$verbose,
	   'verbose!'             => \$verbose,

	   'noreboot!'            => \$noreboot,
	   'n!'                   => \$noreboot,
	   );

if ($help)            { $message->kadeploy_help(); exit 0; }

if (@node_list)
{
    $nodelist=libkadeploy2::nodelist::new();
    $nodelist->loadlist(\@node_list);
}
else
{
    $message->missing_node_cmdline(2);
    exit 1;
}


if (! $disknumber)    { $message->missing_cmdline(2,"disknumber needed"); exit 1; }
if (! $partnumber)    { $message->missing_cmdline(2,"partnumber needed"); exit 1; }
if (! ($disknumber =~ /^\d$/)) { $message->missing_cmdline(2,"partnumber is a number begining at 1"); exit 1; }
if (! ($partnumber =~ /^\d$/)) { $message->missing_cmdline(2,"partnumber is a number begining at 1"); exit 1; }
if (! $login)         { $message->missing_cmdline(2,"user name needed"); exit 1; }
if (! $envname)       { $message->missing_cmdline(2,"environment name needed"); exit 1; }


if ($envname && $login)
{
    $environment=libkadeploy2::environment::new();
    $environment->set_name($envname);
    $environment->set_user($login);    

    if ($environment->get_descriptionfile_fromdb())
    {		


	if (! $environment->load()) 
	{ 
	    $message->erroropeningfile(2,
				       $environment->get_descriptionfile()
				       );
	    exit 1;
	}
    }
}
else
{
    $message->message(2,"envname or login...");
    exit 1;
}

