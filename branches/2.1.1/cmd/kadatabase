#!/usr/bin/perl

use Getopt::Long;
use Term::ReadKey;
use IPC::Open2;
use IO::Handle;
use libkadeploy2::conflib;
use warnings;
use strict;

sub usage();
sub mygetlogin();
sub mygetpassword();
sub mysqlload($);

my $create;
my $drop;
my $clean;
my $testconf;
my $help;
my $addmysqlrights;
my $delmysqlrights;
my $create_db_deploy;
my $drop_db_deploy;
my $clean_db_deploy;
my $patch21;
my $patch211;
my $login;
my $password;
my $host=libkadeploy2::conflib::get_conf("deploy_db_host");
my $mysqlschemapath=libkadeploy2::conflib::get_conf("kadeploy2_directory")."/share/mysql/";

my $deploy_db_name=libkadeploy2::conflib::get_conf("deploy_db_name");
my $deploy_db_login=libkadeploy2::conflib::get_conf("deploy_db_login");
my $deploy_db_password=libkadeploy2::conflib::get_conf("deploy_db_psswd");


GetOptions('addmysqlrights'        => \$addmysqlrights,
	   'delmysqlrights'        => \$delmysqlrights,
	   'create_db_deploy'      => \$create_db_deploy,
	   'drop_db_deploy'        => \$drop_db_deploy,
	   'clean_db_deploy'       => \$clean_db_deploy,
	   'patch21'               => \$patch21,
	   'patch211'              => \$patch211,
	   'h!'                    => \$help,
	   'help!'                 => \$help,
	   );



if ($addmysqlrights        || 
    $delmysqlrights        ||
    $drop_db_deploy        ||
    $create_db_deploy      ||
    $clean_db_deploy       ||
    $patch21               ||
    $patch211
    ) 
{
    print "!!! Warning it required Mysql administrator right !!!\n";
    $login    = mygetlogin();
    $password = mygetpassword();
}
else
{
    usage();
    exit(0);
}


if ($delmysqlrights)         { mysqlload("delmysqlrights");   }
if ($addmysqlrights)         { mysqlload("addmysqlrights");   }
if ($drop_db_deploy)         { mysqlload("drop_db_deploy");   }
if ($create_db_deploy)       { mysqlload("create_db_deploy"); }
if ($clean_db_deploy)        { mysqlload("clean_db_deploy"); }
if ($patch21)                { mysqlload("patch-kadeploy-2.1"); }
if ($patch211)               { mysqlload("patch-kadeploy-2.1.1"); }






#######################################END OF MAIN#########################################

sub usage()
{
    print "
$0 
\t-addmysqlrights
\t-delmysqlrights    

\t-create_db_deploy
\t-drop_db_deploy
\t-clean_db_deploy

\t-patch21
\t-patch211

\t      
\t-clean     correct error in kadeploy database
\t-h|--help print this message\n\n";
}

sub mygetlogin()
{
    my $login;
    print("login:");
    $login=<STDIN>;
    chomp($login);
    return $login;
}

sub mygetpassword()
{
    my $password;
    print("password:"); 
    ReadMode('noecho');
    $password = ReadLine(0);
    chomp($password);
    ReadMode('normal');
    print "\n";
    return $password;
}

sub mysqlload($)
{
    my $func=shift;
    my $ret;
    $ret=system("cat $mysqlschemapath/$func.sql | sed -e 's/SUBSTmydeploypasswordSUBST/$deploy_db_password/g' -e 's/SUBSTmydeployloginSUBST/$deploy_db_login/g' -e 's/SUBSTmydeploydbSUBST/$deploy_db_name/g' | mysql -u $login --password=$password --host=$host ");
    if ($ret==0)
    {
	print("$func Done !!!\n");
    }
    else
    {
	print("Something Wrong occured...");
    }
    return $ret;
}
