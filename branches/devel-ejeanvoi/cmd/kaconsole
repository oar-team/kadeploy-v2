#!/usr/bin/perl

# needs a configuration file that should be found at /etc/kadeploy/deploy_cmd.conf
use strict;
use warnings;

use Getopt::Long;
use libkadeploy2::conflib;
use libkadeploy2::deploy_iolib;
use libkadeploy2::rights_iolib;

my @host_list = ();
my $username = getpwuid($ENV{SUDO_UID}); # real user

## Configuration
my $configuration = libkadeploy2::conflib->new();

if (!@ARGV){
    print "Usage : kaconsole -m|--machine hostname\n";
    exit 0;
}

## gets the options
GetOptions('m=s' => \@host_list,
	   'machine=s' => \@host_list,
	   );

## checks if option is defined
if (!@host_list){
    print "Usage : kaconsole -m|--machine hostname\n";
    exit 0;
}

# load configuration files
if (!$configuration->check_nodes_conf(\@host_list) || !$configuration->check_conf()) {
    print STDERR "ERROR : problem occured loading configuration file\n";
    exit 1;
}
my %cmd = $configuration->check_cmd();

libkadeploy2::deploy_iolib::register_conf($configuration);

## Available variables are :
## - @host_list - list of hosts to reboot

#Check rights on DB
my $base = libkadeploy2::deploy_iolib::connect();
foreach my $host (@host_list)
{
    my @hl=($host);
    if (libkadeploy2::rights_iolib::check_lazy_rights_kadeploy($base,$username,\@hl)==0)
    {
	print "ERROR : you have no rights on node $host\n";	    
	libkadeploy2::deploy_iolib::disconnect($base);
	exit 1;                                                                                    
    }                                                                                              
}


foreach my $host (@host_list){
    
    if(!$cmd{$host}{"console"}){
	print "WARNING : no command found for $host !\n";
    }else{
	# debug print
	# print "to be executed : $host -> $cmd{$host}{\"console\"}\n";
	system("$cmd{$host}{\"console\"}");
    }
}
libkadeploy2::deploy_iolib::disconnect($base);
