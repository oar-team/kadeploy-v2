#!/usr/bin/perl

# TODO add a function that checks file syntax

use Getopt::Long;
use lib::deploy_iolib;
use lib::conflib;
 
use lib::node_bd;
use lib::nodes;
use strict;

if (!@ARGV){
    print "Usage : kaaddnode description_file\n";
    exit 0;
}

## declares the options
my $desc_file = $ARGV[0];

my $base = deploy_iolib::connect();

## checks if option is defined
if(!(-e $desc_file)){
    print "ERROR : description file does not exist\n";
    exit 0;
}


## Available variables are :
## - $desc_file

my $step = 0;
my $disk_id;
my @host_id_list = ();
my @part_env_id_list = ();
open(DESC,$desc_file);
foreach my $line (<DESC>){
    # checks if it is a commentary
    chomp($line);
    if($line){
	if($line !~ /^\s*#.*/){
	    if($line =~ /^\s*(\\#).*/){
		$step = 1;
	    }elsif($step == 0){
		# nodes description
		my @info = split(/\s+/, $line);
		my $node_id = deploy_iolib::add_node($base,\@info);
		push(@host_id_list, $node_id);
	    }elsif($step == 1){
		# disk description
		my @info = split(/\s+/, $line);
		$disk_id = deploy_iolib::add_disk($base,\@info);
		$step = 2;
	    }else{
		# partition description
		my @info = split(/\s+/, $line);
		my $part_id = deploy_iolib::add_partition($base,\@info,$disk_id);
		my $env_id = deploy_iolib::env_name_to_last_ver_id($base,$info[2]);
		if(!$env_id){
		    my $part_nb = deploy_iolib::part_id_to_nb($base,$part_id);
		    print "WARNING : special 'undefined' environment will be affected to partition number $part_nb\n";
		    $env_id = deploy_iolib::env_undefined_to_id($base);
		}
		push(@part_env_id_list, [$part_id,$env_id]);
	    }
	}
    }

    # deploy state
    foreach my $host (@host_id_list){
	foreach my $part_env (@part_env_id_list){
	    deploy_iolib::add_deploy($base,\$part_env,$disk_id,$host);
	}
    }
}
close(DESC);

deploy_iolib::disconnect($base);

1;
