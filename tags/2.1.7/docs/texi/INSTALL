Installing Kadeploy 2.1.6
*************************

This documentation is provided to document kadeploy installation,
nothing more: when all the steps described in this file are completed
you should configure kadeploy _before_ trying to use it. Some
documentation can be found on kadeploy web site
(http://kadeploy.gforge.inria.fr).

1 Installing Kadeploy
*********************

1.1 Requirements on the deployment server
=========================================

Here is a list of required system tools on the server side, all those
programs should be installed on your future deployment server before
beginning kadeploy installation procedure:
`perl'
     kadeploy is mainly written in Perl.

`nmap'
     kadeploy uses it to check the target nodes states during the
     deployment process.

`rsh'
     client, a true `rsh' client should be installed: in many Linux
     distributions, the default `rsh' is often a simple alias to `ssh'.

`screen'
     for deployments initiated from a non tty shell, this requirement
     is due to a bug in rsh.

1.2 Installation from scratch
=============================

1.2.1 On the deployment server
------------------------------

You should install those programs on the deployment server:
`mysql'
     install it and configure it, the client part should be installed
     on the deployment server, the server can reside on another server.

`dhcp-server'
     it is used to configure the PXE boot process used by `kadeploy' to
     control the way the nodes are rebooting, it can reside on another
     server on the same Ethernet VLAN as the target nodes. The easiest
     is to use the one developed by ISC
     (http://www.isc.org/index.pl?/sw/dhcp/) in its third version.

`tftp-server'
     a tftp server _compatible with_ the PXE boot process should be
     installed on the deployment server, the `tftp-hpa' server is a
     good choice.

`sudo'
     is used for users right management.

   Optionally, before starting the installation process, `kadeploy'
installation process creates a deploy user in the deploy group, with
`/home/deploy' home directory. If you want to specify a custom home
directory, you have to do that by yourself before make install. The
main thing is that you have a deploy user in a deploy group, home
directory is not important for kadeploy, but it can be for you to store
additional scripts used in the deployment system.

   In the current directory do:
`make install'
     it will create the deploy user, configure sudo and copy all the
     required programs under the `/usr/local' directory.

   Then you have to install tftp part, you can use variable by default:
`make tftp_install'
     to use the default variables.

`make ARCH=x86_64 tftp_repository=/var/lib/tftpboot/PXEClient/ pxe_rep=pxelinux.cfg/ tftp_relative_path=images_grub tftp_install'
     to specify the tftp install variables suiting your tftp
     installation ("pxe_rep" and "image_grub" are relative to
     "tftp_repository").

   *Caution:* By default the target architecture is _x86_64_, so if you
plan to deploy some 32 bits nodes please specify `ARCH=x86', you should
read the default parameters provided in the `Makfile'.

   Now you have finished to install kadeploy client and you can edit
kadeploy configuration file in `/etc/kadeploy/deploy.conf'.

1.2.2 Database configuration
----------------------------

`kadeploy' manages all the information about the nodes in a dedicated
database.  It uses the open-source `mysql' server, that can run on the
deployment server or another server.  The *Note previous section:
Install deployment server, should be completed before going through
this one.  Edit `/etc/kadeploy/deploy.conf' to specify:
"deploy_db_host": if your database is on the same host as Kadeploy:
`deploy_db_host=localhost', if not, specify the remote host address:
for example, `deploy_db_host=192.168.1.10'.

   In the current directory do:
`make db_install'
     to copy all the database installation scripts to
     `/usr/local/kadeploy' directory.

   Now, the database creation scripts are there, they will run as root
on the mysql server because those database scripts need to create a
deploy user in the database.

   The rest of the installation process for the database part consists
in creating a deploy user in the database and then create a dedicated
database, with dedicated tables, belonging to deploy.  The script that
manages database initialisation is run from the deployment server, if
the database is installed on the deployment server, it should be ok.
If you have a separate database server:
  1. you have to be able to make this command line without error:
     `mysql -u root -h DATABASE_HOST_ADDRESS -p --database=mysql', if
     you cannot do that log on the server hosting the mysql server:
       a. check your `/etc/mysql/my.cnf' to see there is a line like
          this: `bind-address=...' and remove it, then

       b. allow a mysql client to connect from the deployment server as
          the database administrator: `mysql -u root -p' and then type
          this command: `GRANT ALL PRIVILEGES ON *.* TO
          'root'K'ADEPLOY_HOST_ADDRESS' IDENTIFIED BY '' WITH GRANT
          OPTION;' and finally, validate those newly created
          privileges: `FLUSH  PRIVILEGES;'

   Now you should be able to run the database initialisation script
from the deployment server: from the `/usr/local/kadeploy' type:
`./kadeploy_db_init.pl'

   Now, you are finished, but if you have a remote database, and want
to revoke the rights created for remote database initialisation, you
can do this:
  1. connect to host where database is installed and connect to your
     database: `mysql -u root -p'

  2. type this command:  `DELETE FROM user WHERE user='root' &&
     host='KADEPLOY_HOST_ADDRESS';'

  3. exit from mysql

   *Please notice:* By default you can connect to deploy database from
_anywhere_: it is not necessary, but you can reduce access to deploy
database to your head node if you prefer.

1.3 Upgrading from kadeploy 2.1.2
=================================

Since previous versions of kadeploy was a stable proof of concept, all
the uninstallation process should be conducted manually, sorry about
that (1).

  1. locate your kadeploy home directory and remove it: usually it is
     `/usr/local/kadeploy' or `/opt/kadeploy' or `/opt/kadeploy2'

  2. edit your `/etc/sudoers' file to remove old references to kadeploy
     rights

  3. remove all the links and programs: `kaconsole' `kadeploy'
     `kaenvironments' `kareboot' `karecordenv' `mcatseg' `migratenv'
     `kaadduser' `kadatabase' `kadeluser' `kanodes' `kasetup'
     `sentinelle' `dksentinelle' `mcat' `mput' `DKsentinelle-i686'
     `mcat_ssh.pl' `sentinelle.pl' `DKsentinelle-x86_64'
     `kasudowrapper.sh' `mcatseg' `mcat_rsh.pl'

  4. remove all the man pages in `/usr/local/share/man/man1':
     `/usr/share/man/man1/clusternodes.conf.1'
     `/usr/share/man/man1/clusterpartition.conf.1'
     `/usr/share/man/man1/deploy_cmd.conf.1'
     `/usr/share/man/man1/deploy.conf.1'
     `/usr/share/man/man1/kaadduser.1' `/usr/share/man/man1/kaarchive.1'
     `/usr/share/man/man1/kaconsole.1'
     `/usr/share/man/man1/kacreateenv.1'
     `/usr/share/man/man1/kadatabase.1'
     `/usr/share/man/man1/kadeluser.1' `/usr/share/man/man1/kadeploy.1'
     `/usr/share/man/man1/kaenvironments.1'
     `/usr/share/man/man1/kanodes.1' `/usr/share/man/man1/kareboot.1'
     `/usr/share/man/man1/karecordenv.1' `/usr/share/man/man1/kasetup.1'

  5. finally save all your configuration files located in
     `/etc/kadeploy/': `clusternodes.conf' `clusterpartition.conf'
     `deploy_cmd.conf' `deploy.conf'

   *Please notice:* there is no need to touch to the database part of
kadeploy since there is _no change_ in the database structure.

1.3.1 On the deployment server
------------------------------

*Please refer* to *Note Install deployment server:: to install all the
required programs, and  update the tftp part. Indeed, you have to
upgrade the deployment kernel since the previous version is not
compatible with kadeploy 2.1.5.  After that, you can merge your saved
files with the default configuration files installed in `/etc/kadeploy'
directory.

1.3.2 Database configuration
----------------------------

Nothing to do for this section. Everything should work as before for
you. If you want to configure new features of kadeploy 2.1.6, please
refer to the corresponding chapters.

   ---------- Footnotes ----------

   (1) uninstallation process is automatic starting from kadeploy 2.1.5

