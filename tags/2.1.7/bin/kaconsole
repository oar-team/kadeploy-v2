#!/usr/bin/perl

#-------------------------------------------------------------
# Search for config file : <config directory>/deploy_cmd.conf
#-------------------------------------------------------------

use strict;
use warnings;

use Getopt::Long;
use libkadeploy2::conflib;
use libkadeploy2::deploy_iolib;
use libkadeploy2::rights_iolib;
use libkadeploy2::confroot;

sub usage();

my $conf_root_dir;
my @host_list = ();
my $username = getpwuid($ENV{SUDO_UID}); # real user

if (!@ARGV) { usage; }

#-------------
# Get options
#-------------
GetOptions('m=s'      => \@host_list,
  'machine=s'         => \@host_list,
  'C=s'               => \$conf_root_dir,
  'configuration=s'   => \$conf_root_dir
);

## checks if option is defined
if (!@host_list) { usage; }

if (!$conf_root_dir eq "") {
  libkadeploy2::confroot::set_conf_rootdir($conf_root_dir);
}
libkadeploy2::confroot::get_conf_rootdir();
libkadeploy2::confroot::info();

## Configuration
my $configuration = libkadeploy2::conflib->new();

# load configuration files
if (!$configuration->check_nodes_conf(\@host_list) || !$configuration->check_conf()) {
    print STDERR "ERROR : problem occured loading configuration file\n";
    exit 1;
}
my %cmd = $configuration->check_cmd();

libkadeploy2::deploy_iolib::register_conf($configuration);

## Available variables are :
## - @host_list - list of hosts to reboot

#Check rights on DB
my $base = libkadeploy2::deploy_iolib::connect();
foreach my $host (@host_list)
{
    my @hl=($host);
    if (libkadeploy2::rights_iolib::check_lazy_rights_kadeploy($base,$username,\@hl)==0)
    {
	print "ERROR : you have no rights on node $host\n";	    
	libkadeploy2::deploy_iolib::disconnect($base);
	exit 1;                                                                                    
    }                                                                                              
}


foreach my $host (@host_list){
    
    if(!$cmd{$host}{"console"}){
	print "WARNING : no command found for $host !\n";
    }else{
	# debug print
	# print "to be executed : $host -> $cmd{$host}{\"console\"}\n";
	system("$cmd{$host}{\"console\"}");
    }
}
libkadeploy2::deploy_iolib::disconnect($base);


sub usage()
{
  print "Usage : kaconsole -m|--machine hostname [-C|--configuration <configuration root directory>]\n";
  exit 0;
}