-Documentation...
-Finishing the man pages
-Roadmap
-generic interface to setup a system to a node
	-setup(system,node)
		-setup_copy (put the needs in tftp)
		-setup_pxe  (link a system to a node)
		-setup_rarp (for sparc solaris)
	

-generic interface for an environment
	-sizepacked (gz, bz2 sized)
	-sizedeploy (nMo, nGo)
	-which fs it knows RW (ext2, UFS solaris, UFS freebsd, NTFS)
	-communication interface (rshd,serial,ssh)
	-possibility to use deploy mechanism ?
	-got deployment tool ?

-different deployment system
	-linux... done
	-freebsd
	-solaris
	-*BSD


-lesser dependencies
	-actually: rsh, nmap, taktuk

-dependencies
	-grub     => linuxdeploy	=>	linux	=> linux
							=> freebsd
							=> ...

					=>	freebsd 
					=>	windows
					=>	solaris


	-freebsddeploy			=>	freebsd
					=>	linux

	-solarisdeploy			=>	solaris


	linux.deployment() => linuxdeploy.deployment() => grub.deployment()
	linux.deployed() => linuxdeploy.deployed() => grub.deployed()
	2 étape max pour installé un système

-script de mise en place du système de déploiement lié à un environement


-algo kadeploy

	deploy(systemlinux,list-node)
		{
		ci=communication-interface(list-node)
		
		(NodesConnected,nodesNotConnected)=tryconnect(ci)
		nodes_info=getinfo(NodesConnected)		
		
		nodesready2deploy=systemlinux.getnodewhocandeploy(nodes_info)
		nodesnotready2deploy=systemlinux.getnodewhocantdeploy(nodes_info)
		
		nodesnotready2deploy+=nodesNotConnected
		setupboot(systemlinux.deployment,nodesnotready2deploy)		
		reboot(nodesnotready2deploy)
		
		do 180s ( nodesready2deploy=getnodesready(nodesnotready2deploy)+
							  nodesready2deploy )

		exec(systemlinux.scripts(),nodesready2deploy)
		
		setupboot(systemlinux.deployed,nodesready2deploy)
		reboot(nodesready2deploy)
		
		
		(NodesConnected,nodesNotConnected)=tryconnect(ci)
		(gooddeployed,baddeployed)=exec(systemlinux.info,NodesConnected)
		
		print gooddeployed, baddeployed
		
  		}
		
		
		
			