#!/usr/bin/env bash

UNAME=`uname`
case $UNAME in
        "Linux") HOST=`hostname -f`;;
        "SunOS") HOST=`hostname`;;
        *) HOST=`hostname -f`;;
esac

INSTALL_DIR=@prefix@/lib/erlang/
ERL=@ERL@
VERSION=@PACKAGE_VERSION@
NAMETYPE="-name"

CLIENTNAME=kadeploy_client_$RANDOM
NAME=kadeploy
SERVERHOST=$HOST
SERVERNAME="kadeploy-server@$SERVERHOST"

KADEPLOYPATH=$INSTALL_DIR/lib/$NAME-$VERSION/ebin

CONF_OPT_FILE="/etc/kadeploy/kadeploy.conf"
BOOT_OPT="-boot $INSTALL_DIR/lib/$NAME-$VERSION/priv/$NAME -boot_var KADEPLOYPATH  $INSTALL_DIR "
DEBUG_LEVEL=5
ERL_RSH=" -rsh ssh "
ERL_OPTS=" -smp auto +P 250000 +A 16 +K true @ERL_OPTS@ "
COOKIE='kadeploy'
ERTS_RUN=`$ERL -version 2>&1 | tr -cd 0123456789.`
ERTS_BOOT=`grep erts $KADEPLOYPATH/../priv/$NAME.rel | tr -cd 0123456789.`
NODEFILE=./mynodes
OPTIONS=default

start() {
    $ERL $ERL_OPTS $ERL_RSH -noinput -noshell $NAMETYPE $CLIENTNAME -setcookie $COOKIE \
    -pa $KADEPLOYPATH -run kadeploy_mgr deploy $SERVERNAME $USER $NODEFILE \
        $ANONYMOUS_ENV $OPTIONS -s init stop
}

version() {
    echo "Kadeploy version $VERSION"
}

usage() {
    prog=`basename $0`
    echo "$prog <options> start|stop|restart|debug|status|version"
    exit
}

while getopts ":f:m:p:l:d:r:n:e:" Option
do
    case $Option in
        f) NODEFILE=$OPTARG;;
        l) # must add absolute path
            echo "$OPTARG" | grep -q "^/"
            RES=$?
            if [ "$RES" == 0 ]; then
                LOG_OPT="log_file \"$OPTARG\" "
            else
                LOG_OPT="log_file \"$PWD/$OPTARG\" "
            fi
            ;;
        d) ANONYMOUS_ENV=" anonymous $OPTARG ";;
        e) RECORDED_ENV=" recorded $OPTARG ";;
        r) ERL_RSH=" -rsh $OPTARG ";;
        n) RUN_NAME=$OPTARG;;
        m)
            MIN_NODES=$OPTARG
            OPTIONS="minnodes:$MIN_NODES;$OPTIONS"
            ;;
        *) usage ;;
    esac
done
shift $(($OPTIND - 1))

case $1 in
    start)
#         checkconfig
        start
        ;;
    debug)
#         checkconfig
        debug
        ;;

    stop)
        stop
        ;;
    status)
        recorder_status
        status
        ;;

    restart)
        stop
        start
        ;;
    version)
        version
        ;;

    *)
        usage $0
        ;;
esac
